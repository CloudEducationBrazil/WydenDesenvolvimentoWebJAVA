- Para associar com a Entidade/Tabela do BD
@Entity
@Table(name = "tb_user")

- Para criação de PK (chave primária)
@Id
@GeneratedValue (strategy = GenerationType.IDENTITY)

- Para renomear o atributo da casse para compatível com o BD
@Column(name="user_year")
private Integer year;

- Para redefinir o Tipo do campo para TEXT no BD
@Column(columnDefinition = "TEXT")
private String shortDescription;

- Chave Composta PK na classe Mãe
@EmbeddedId
	private BelongingPK id = new BelongingPK();

- Chave Composta PK na classe auxiliar
@Embeddable
public class BelongingPK {
	@ManyToOne
	@JoinColumn(name = "user_id")
	private User idUser;

-- API REST - por recurso
@RestController
@RequestMapping(value = "/users")
public class UserController {

-- Componente  injeção de dependência      
@Autowired
public UserRepository gameRepository;
	
-- endpoint Método Get - Consultar
@GetMapping
public List<UserDTO> getAllUser(){}

-- endpoint Método Get por Id	
@GetMapping(value="/{id}")
public User getByUserId(@PathVariable Long id){}

-- endpoint Médodo Post - Incluir por Id	
@PostMapping
public void createUser (@RequestBody UserDTO body) {}

-- endpoint Método Alterar	
@PutMapping(value = "/{idUser}/replacement")
public void updateUser (@PathVariable Long idUser, @RequestBody UserDTO body) {}

-- endpoint Método Deletar
@DeleteMapping(value = "/{idCategoria}")
public void deleteUser (@PathVariable Long idCategoria) {}

-- Camada Service
@Transactional
@Transactional(readOnly = true)